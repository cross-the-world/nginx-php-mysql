name: build

on:
  push:
    branches:
      - master

env:
  REPO: ${{ github.repository }}
  REPO_URL: ${{ github.repositoryUrl }}
  RUNID: ${{ github.run_id }}
  RUNNR: ${{ github.run_number }}
  MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
  MYSQL_IP: 0.0.0.0
  MYSQL_PORT: 3306
  MYSQL_USER: root
  MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
  PMA_ABSOLUTE_URI: ${{ secrets.PMA_ABSOLUTE_URI }}
  MYSQL_INIT: ${{ secrets.MYSQL_INIT }}
  MYSQL_TEST: ${{ secrets.MYSQL_TEST }}
  PHP_PARAMS: ${{ secrets.PHP_PARAMS }}
  SSL: ${{ secrets.SSL }}
  SITE_AUTH: ${{ secrets.SITE_AUTH }}
  TARGET: "/home/github/${{github.repository}}"
  TMP_DIR: "/home/github/tmp/${{github.repository}}"

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v1

      - name: Create raw config files
        shell: bash
        env:
          CONFIG_JSON: ${{ secrets.CONFIG_JSON }}
        run: |
          echo "$REPO, $REPO_URL, $MYSQL_HOST, $PMA_ABSOLUTE_URI, $TARGET" &&
          mkdir -p ./mysql/init &&
          echo "$MYSQL_INIT" > ./mysql/init/init.sql &&
          echo "$MYSQL_TEST" > ./mysql/init/test.sh &&
          mkdir -p ./nginx/conf.d/sites &&
          echo "$PHP_PARAMS" > ./nginx/conf.d/credentials.conf &&
          echo "$SITE_AUTH" > ./nginx/conf.d/sites/auth.json &&
          mkdir -p ./nginx/ssl/sites &&
          echo "$SSL" > ./nginx/ssl/sites/ssl.json

      - name: Copy to DigitalOcean
        uses: appleboy/scp-action@master
        with:
          HOST: ${{ secrets.DC_HOST }}
          USERNAME: ${{ secrets.DC_USER }}
          PORT: ${{ secrets.DC_PORT }}
          KEY: ${{ secrets.DC_KEY }}
          #PASSWORD: ${{ secrets.DC_PASS }}
          source: "."
          target: ${{ env.TMP_DIR }}

      - name: Clear raw config files
        shell: bash
        run: |
          rm -rf ./mysql/init &&
          rm -rf ./nginx/conf.d &&
          rm -rf ./nginx/ssl

      - name: Backup database on digitalocean
        uses: appleboy/ssh-action@master
        env:
          MYSQL_DUMPS_DIR: "${{ env.TMP_DIR }}/mysql/backup"
        with:
          HOST: ${{ secrets.DC_HOST }}
          USERNAME: ${{ secrets.DC_USER }}
          PORT: ${{ secrets.DC_PORT }}
          KEY: ${{ secrets.DC_KEY }}
          #PASSWORD: ${{ secrets.DC_PASS }}
          envs: MYSQL_IP, MYSQL_ROOT_PASSWORD, MYSQL_DUMPS_DIR, TARGET
          script: |
            echo $MYSQL_DUMPS_DIR/all_backups.sql &&
            cd $TARGET &&
            chmod -R 777 $MYSQL_DUMPS_DIR/ &&
            (mysqldump --all-databases -h $MYSQL_IP -P 3306 --protocol=tcp -u"root" -p"$MYSQL_ROOT_PASSWORD" > "$MYSQL_DUMPS_DIR/all_backups.sql" 2>/dev/null)

      - name: Generate configs on digitalocean
        uses: appleboy/ssh-action@master
        with:
          HOST: ${{ secrets.DC_HOST }}
          USERNAME: ${{ secrets.DC_USER }}
          PORT: ${{ secrets.DC_PORT }}
          KEY: ${{ secrets.DC_KEY }}
          #PASSWORD: ${{ secrets.DC_PASS }}
          envs: TMP_DIR
          script: |
            ((chmod -R 777 $TMP_DIR/) || true) &&
            ((chmod +x $TMP_DIR/generate_configs.py) || true) &&
            python3 --version &&
            python3 generate_configs.py

      - name: Deploy on digitalocean
        uses: appleboy/ssh-action@master
        with:
          HOST: ${{ secrets.DC_HOST }}
          USERNAME: ${{ secrets.DC_USER }}
          PORT: ${{ secrets.DC_PORT }}
          KEY: ${{ secrets.DC_KEY }}
          #PASSWORD: ${{ secrets.DC_PASS }}
          envs: PMA_ABSOLUTE_URI, MYSQL_HOST, MYSQL_ROOT_PASSWORD, TMP_DIR, TARGET
          script: |
            cd $TMP_DIR &&
            export PMA_ABSOLUTE_URI=$PMA_ABSOLUTE_URI &&
            export MYSQL_HOST=$MYSQL_HOST &&
            export MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD &&
            export CURRENT_UID=$(id -u):$(id -g) &&
            docker-compose build --no-cache &&
            cd $TARGET &&
            docker-compose rm -f -s &&
            rm -rf . &&
            mv $TMP_DIR $TARGET
            docker-compose up --renew-anon-volumes -d &&
            rm -rf $TMP_DIR

      - name: Chmod on digitalocean
        uses: appleboy/ssh-action@master
        with:
          HOST: ${{ secrets.DC_HOST }}
          USERNAME: ${{ secrets.DC_USER }}
          PORT: ${{ secrets.DC_PORT }}
          KEY: ${{ secrets.DC_KEY }}
          #PASSWORD: ${{ secrets.DC_PASS }}
          envs: TARGET
          script: |
            ((chmod -R 777 $TARGET/) || true)

      - name: Restore database on digitalocean
        uses: appleboy/ssh-action@master
        env:
          MYSQL_DUMPS_DIR: "${{ env.TARGET }}/mysql/backup"
        with:
          HOST: ${{ secrets.DC_HOST }}
          USERNAME: ${{ secrets.DC_USER }}
          PORT: ${{ secrets.DC_PORT }}
          KEY: ${{ secrets.DC_KEY }}
          #PASSWORD: ${{ secrets.DC_PASS }}
          envs: MYSQL_IP, MYSQL_PORT, MYSQL_USER, MYSQL_ROOT_PASSWORD, MYSQL_DUMPS_DIR, TARGET
          script: |
            cd $TARGET &&
            ((chmod +x $TARGET/wait_for_restore.sh) || true) &&
            $TARGET//wait_for_restore.sh $MYSQL_IP $MYSQL_PORT $MYSQL_USER $MYSQL_ROOT_PASSWORD "$MYSQL_DUMPS_DIR/all_backups.sql"

